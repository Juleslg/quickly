{%- comment -%}
  ----------------------------------------------------------------------------------------------------------------------
  PRODUCT QUICK BUY
  ----------------------------------------------------------------------------------------------------------------------

  This component is used to render the quick buy content. It is important to note that this snippet must always be
  included inside a product template (you can find an example in the "main-product.liquid" section). The reason is that
  we want to re-use the settings of the merchant on their product page (which info they want to make it visible). To do
  that, we need to re-use the whole product page, and extract the quick-buy part (rendered here).

  ********************************************
  Supported variabless
  ********************************************

  * product: the product to render
  * section: the section is implicitly available. Here, the section is always a "product" template section, so you can
  access all the information from the section
{%- endcomment -%}

{%- capture product_form_id -%}product-form-{{ product.id }}-{{ section.id }}{%- endcapture -%}
<template id="quick-buy-content">
  <p class="h5" slot="header">{{ 'product.general.choose_options' | t }}</p>

  <div class="quick-buy-modal__content">
    <button
      type="button"
      class="quick-buy-modal__close-button sm-max:hidden"
      is="dialog-close-button">
      <span class="sr-only">{{ 'general.accessibility.close' | t }}</span>
      {%- render 'icon' with 'close' -%}
    </button>

    <div class="quick-buy-modal__gallery-wrapper">
      {%- render 'product-gallery'
        , product: product
        , desktop_layout: 'carousel_dots'
        , mobile_controls: 'arrows'
        , enable_media_autoplay: section.settings.enable_media_autoplay
        , enable_video_looping: section.settings.enable_video_looping
        , enable_image_zoom: false
      -%}

      <div class="quick-buy-modal__mobile-info v-stack gap-1 justify-center text-center sm:hidden">
        <a href="{{ product.title }}" class="product-title h6">{{ product.title }}</a>
        {% render 'price-list'
          , product: product
          , variant: product.selected_or_first_available_variant
          , hide_unit_price: true
          , form_id: product_form_id
          , context: 'card' %}


      </div>
      <div style="display: none;">
        {%- render 'buy-buttons' form_id: product_form_id
        -%}
      </div>
    </div>

    <div class="quick-buy-modal__info-wrapper">
      {%- assign allow_blocks = '@app,vendor,title,price,payment_terms,separator,variant_picker,product_variations,line_item_property,buy_buttons' | split: ',' -%}
      {%- render 'product-info'
        , product: product
        , allow_blocks: allow_blocks
        , update_url: update_url -%}

        

        <button
  type="submit"
  style="margin-top: 1.5rem;"
  id="buy-button-linked"
  class="buy-buttons"
  form="product-form-{{ product.id }}-{{ section.id }}"
  variant="{{ product.selected_or_first_available_variant.id }}"
  
>
  {{ 'product.general.add_to_cart_button' | t }}
</button>

{%- if product != blank -%}
  {%- assign variant_picker_block = section.blocks | where: 'type', 'variant_picker' | first -%}

  {%- form 'product', product, is: 'product-form', id: form_id -%}
    <input type="hidden" {% if variant_picker_block != blank %}disabled{% endif %} name="id" value="{{ product.selected_or_first_available_variant.id }}">

    {% liquid
      assign button_disabled = false

      if product.selected_or_first_available_variant.available == false
        assign button_disabled = true
        assign button_content = 'product.general.sold_out_button' | t
      else
        if product.template_suffix contains 'pre-order'
          assign button_content = 'product.general.pre_order_button' | t
        else
          assign button_content = 'product.general.add_to_cart_button' | t
        endif
      endif
    %}

    <div class="v-stack gap-4">
      {%- if product.gift_card? and show_gift_card_recipient -%}
        <gift-card-recipient class="gift-card-recipient v-stack gap-3">
          {%- assign checkbox_label = 'gift_card.recipient.checkbox' | t -%}
          {%- render 'checkbox', label: checkbox_label, name: 'properties[__shopify_send_gift_card_to_recipient]' -%}

          <div class="gift-card-recipient__fields js:hidden">
            <div class="fieldset">
              {%- liquid
                assign recipient_email_label = 'gift_card.recipient.email_label' | t
                render 'input', type: 'email', label: recipient_email_label, name: 'properties[Recipient email]', value: form.email, required: true

                assign recipient_name_label = 'gift_card.recipient.name_label' | t
                render 'input', label: recipient_name_label, name: 'properties[Recipient name]', value: form.name

                assign message_label = 'gift_card.recipient.message_label' | t
                render 'input', label: message_label, name: 'properties[Recipient message]', value: form.message, multiline: 3, maxlength: 200, show_max_characters_count: true
              -%}
            </div>
          </div>
        </gift-card-recipient>
      {%- endif -%}

      <buy-buttons class="buy-buttons {% if show_payment_button %}buy-buttons--has-dynamic{% endif %}" template="{{ product.template_suffix | escape }}" form="{{ form_id }}">
        {%- if show_payment_button and atc_button_background == blank and atc_button_text_color == blank -%}
          {%- assign atc_button_style = 'outline' -%}
        {%- else -%}
          {%- assign atc_button_style = 'solid' -%}
        {%- endif -%}

        {%- render 'button', content: button_content, type: 'submit', disabled: button_disabled, style: atc_button_style, background: atc_button_background, text_color: atc_button_text_color, stretch: true -%}

        {%- if show_payment_button -%}
          {{- form | payment_button -}}

          <style>
            #shopify-section-{{ section.id }} .shopify-payment-button {
              {%- if payment_button_background != blank and payment_button_background != 'rgba(0,0,0,0)' -%}
                --button-background: {{ payment_button_background.rgb }};
              {%- endif -%}

              {%- if payment_button_text_color != blank and payment_button_text_color != 'rgba(0,0,0,0)' -%}
                --button-text-color: {{ payment_button_text_color.rgb }};
              {%- endif -%}

              {%- unless product.selected_or_first_available_variant.available -%}
                display: none;
              {%- endunless -%}
            }
          </style>
        {%- endif -%}
      </buy-buttons>
    </div>
  {%- endform -%}
{%- else -%}
  <buy-buttons class="buy-buttons" template="{{ product.template_suffix | escape }}" form="{{ form_id }}">
    {%- assign button_content = 'product.general.add_to_cart_button' | t -%}
    {%- render 'button', content: button_content, type: 'submit', background: variant_picker_block.settings.atc_button_background, text_color: variant_picker.settings.atc_button_text_color, stretch: true -%}
  </buy-buttons>
{%- endif -%}





      <a href="{{ product.url }}" class="quick-buy-modal__view-more link sm-max:hidden">{{ 'product.general.view_details' | t }}</a>
    </div>


  </div>
 

  <style>
    .button w-full {
      margin-top: 1.5rem;
    }
  </style>

  <script>
      document.addEventListener('click', function(event) {
      // Check if the clicked element or any of its parents have the 'block-swatch' class
      let targetElement = event.target;
      while (targetElement && !targetElement.classList.contains('block-swatch')) {
    targetElement = targetElement.parentElement;
      }

      // If a 'block-swatch' element was clicked
      if (targetElement && targetElement.classList.contains('block-swatch')) {
    // Remove 'is-selected' from all 'block-swatch' elements
    document.querySelectorAll('.block-swatch.is-selected').forEach(function(el) {
      el.classList.remove('is-selected');
    });

    // Add 'is-disabled' to all 'block-swatch' elements except the clicked one
    document.querySelectorAll('.block-swatch').forEach(function(el) {
      if (el !== targetElement) {
        el.classList.add('is-disabled');
      }
    });

    // Add 'is-selected' to the clicked 'block-swatch' element
    targetElement.classList.add('is-selected');
    // Remove 'is-disabled' in case it was added previously
    targetElement.classList.remove('is-disabled');
      }
    });
  </script>

</template>